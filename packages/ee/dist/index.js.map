{
  "version": 3,
  "sources": ["../src/index.ts"],
  "sourcesContent": ["#!/usr/bin/env node\n\n/*\n * Copyright (c) 2024 Kiyozz.\n *\n * All rights reserved.\n */\n\nimport { Format } from 'esbuild'\nimport minimist from 'minimist'\nimport * as fs from 'node:fs/promises'\nimport * as path from 'node:path'\nimport * as process from 'node:process'\n\nimport { build } from './build.js'\n\ntype Args = {\n  'check-types'?: boolean\n  'ts-project'?: string\n  format?: Format | Format[]\n  external?: string | string[]\n  'clean-outdir'?: boolean\n  outdir?: string\n  target?: string\n  module?: boolean\n}\n\nconst argv = minimist<Args>(process.argv.slice(2))\n\nif (argv.version) {\n  console.log(\n    JSON.parse(\n      (await fs.readFile(path.resolve(__dirname, '../package.json'))).toString(\n        'utf-8',\n      ),\n    ).version,\n  )\n  process.exit(0)\n}\n\nconst toArray = <T extends string>(value?: T | T[]): T[] => {\n  return value ? (typeof value === 'string' ? [value] : value) : []\n}\n\nconst entries = argv._\nconst {\n  _,\n  '--': __,\n  'check-types': checkTypes,\n  'ts-project': tsProject = 'tsconfig.json',\n  format,\n  external,\n  'clean-outdir': cleanOutDir,\n  outdir,\n  target,\n  module,\n  ...options\n} = argv\n\nconst formats = toArray(format)\nconst externals = toArray(external)\n\nawait build({\n  module: module ?? true,\n  entries,\n  tsProject,\n  outdir,\n  cleanOutDir,\n  checkTypes,\n  formats,\n  target,\n  options: {\n    ...options,\n    external: externals,\n  },\n})\n"],
  "mappings": ";AASA,OAAO,cAAc;AACrB,YAAY,QAAQ;AACpB,YAAY,UAAU;AACtB,YAAY,aAAa;AAEzB,SAAS,aAAa;AAatB,MAAM,OAAO,SAAe,QAAQ,KAAK,MAAM,CAAC,CAAC;AAEjD,IAAI,KAAK,SAAS;AAChB,UAAQ;AAAA,IACN,KAAK;AAAA,OACF,MAAM,GAAG,SAAS,KAAK,QAAQ,WAAW,iBAAiB,CAAC,GAAG;AAAA,QAC9D;AAAA,MACF;AAAA,IACF,EAAE;AAAA,EACJ;AACA,UAAQ,KAAK,CAAC;AAChB;AAEA,MAAM,UAAU,CAAmB,UAAyB;AAC1D,SAAO,QAAS,OAAO,UAAU,WAAW,CAAC,KAAK,IAAI,QAAS,CAAC;AAClE;AAEA,MAAM,UAAU,KAAK;AACrB,MAAM;AAAA,EACJ;AAAA,EACA,MAAM;AAAA,EACN,eAAe;AAAA,EACf,cAAc,YAAY;AAAA,EAC1B;AAAA,EACA;AAAA,EACA,gBAAgB;AAAA,EAChB;AAAA,EACA;AAAA,EACA;AAAA,EACA,GAAG;AACL,IAAI;AAEJ,MAAM,UAAU,QAAQ,MAAM;AAC9B,MAAM,YAAY,QAAQ,QAAQ;AAElC,MAAM,MAAM;AAAA,EACV,QAAQ,UAAU;AAAA,EAClB;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA,SAAS;AAAA,IACP,GAAG;AAAA,IACH,UAAU;AAAA,EACZ;AACF,CAAC;",
  "names": []
}
